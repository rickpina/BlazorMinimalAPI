@using BlazorMinimalAPI.Data_Models
<h3>Random Data Generation</h3>

@inject HttpClient HttpClient



<EditForm Model="Model" OnValidSubmit="GenerateRandomData" FormName="RandomPersonGeneration">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<button class="btn btn-success" type="submit">Generate</button>

	<label>
		Generate First Name:
		<InputSelect @bind-Value="Model!.GenerateAmount">
			<option checked="@(Model!.GenerateAmount == 1)"
			value="1">
				1
			</option>
			<option checked="@(Model!.GenerateAmount == 10)"
			value="10">
				10
			</option>
			<option checked="@(Model!.GenerateAmount == 100)"
			value="100">
				100
			</option>
			<option checked="@(Model!.GenerateAmount == 1000)"
			value="1000">
				1000
			</option>
			<option checked="@(Model!.GenerateAmount == 10000)"
			value="10000">
				10000
			</option>
			

		</InputSelect>
	</label>
	<label>
		Generate First Name:
		<InputSelect @bind-Value="Model!.FirstName">
			<option checked="@(Model!.FirstName == "Random")"
			value="Random">
				Random
			</option>
		</InputSelect>
	</label>

	<label>
		Generate Last Name:
		<InputSelect @bind-Value="Model!.LastName">
			<option checked="@(Model!.LastName == "Random")"
			value="Random">
				Random
			</option>

		</InputSelect>
	</label>

	<label>
		Generate Date Of Birth:
		<InputSelect @bind-Value="Model!.DateOfBirth">
			<option checked="@(Model!.DateOfBirth == "Random")"
			value="Random">
				Random
			</option>

		</InputSelect>
	</label>

	<label>
		Generate SSN:
		<InputSelect @bind-Value="Model!.SSN">
			<option checked="@(Model!.SSN == "Random")"
			value="Random">
				Random
			</option>

		</InputSelect>
	</label>

	<label>
		Generate Occupation:
		<InputSelect @bind-Value="Model!.Occupation">
			<option checked="@(Model!.Occupation == "Random")"
			value="Random">
				Random
			</option>

		</InputSelect>
	</label>

	<label>
		Title:
		<InputSelect @bind-Value="Model!.Title">
			<option checked="@(Model!.Title == "Random")"
			value="Random">
				Random
			</option>

		</InputSelect>
	</label>


</EditForm>



@code {
	[SupplyParameterFromForm]
	private GeneratePerson? Model { get; set; }

	protected override void OnInitialized() =>
		Model ??= new();



	private async Task GenerateRandomData()
	{
		if (Model != null)
		{
			try
			{
				var response = await HttpClient.PostAsJsonAsync("/person/generate", Model);

				if (response.IsSuccessStatusCode)
				{
					var generatedPeople = await response.Content.ReadFromJsonAsync<List<Person>>();


					Console.WriteLine("Random Data submitted successfully!");

					if (generatedPeople == null)
						throw new Exception("Result was a success but came back null.");

					foreach (var generatedPerson in generatedPeople)
					{
						Console.WriteLine($"First Name: {generatedPerson?.FirstName}");
						Console.WriteLine($"Last Name: {generatedPerson?.LastName}");
						Console.WriteLine($"Occupation: {generatedPerson?.Occupation}");
						Console.WriteLine($"Date of Birth: {generatedPerson?.DateOfBirth.ToShortDateString()}");
						Console.WriteLine($"SSN: {generatedPerson?.SSN}");
						Console.WriteLine($"Title: {generatedPerson?.Title}");						
						Console.WriteLine("-----------------------------");
					}
				}
				else
				{
					Console.WriteLine($"Error: {response.StatusCode}");
				}
			}
			catch (Exception ex)
			{
				Console.WriteLine($"An error occurred: {ex.Message}");
			}
		}
		else
		{
			Console.WriteLine("Model is null.");
		}

	}
}
